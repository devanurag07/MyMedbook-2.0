{"version":3,"sources":["routes.js","App.js","helpers/axiosInterceptors.js","reportWebVitals.js","redux/auth/reducers.js","redux/course/reducers.js","redux/queue/reducers.js","redux/reducers.js","redux/auth/saga.js","redux/course/saga.js","redux/queue/saga.js","redux/sagas.js","redux/store.js","index.js","helpers/constants.js","helpers/axiosUtils.js","helpers/authUtils.js","helpers/actionTypes.js","redux/auth/actions.js","redux/course/actions.js","redux/queue/actions.js","redux/actions.js"],"names":["Home","React","lazy","PrescriptionPdf","Login","Logout","AboutUs","FAQ","TC","NS","PAP","NotFound","ContactUs","Register","Admin","ResetPassword","NonAuthRoute","Component","component","rest","roles","render","props","isUserAuthenticated","location","pathname","to","state","from","PrivateRoute","userInfo","isAuthTokenValid","role_name","Date","subscription_active_at","routes","path","exact","name","route","Route","layout","loading","NonAuthLayout","Loadable","loader","loaded","default","AdminLayout","withLayout","WrappedComponent","HOC","this","connect","App","getLayout","loginUserSuccess","userData","Fragment","map","index","user","Layout","fallback","isAuthenticated","Auth","isLoading","setLoadingData","excludeUrls","axios","interceptors","request","use","config","token","getUserToken","find","r","url","includes","document","body","classList","add","headers","Authorization","method","error","remove","Promise","reject","response","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INIT_STATE","getLoggedInUser","bdata","action","type","LOGIN_USER","LOGIN_USER_SUCCESS","payload","login_error","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","registerError","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","passwordResetStatus","FORGET_PASSWORD_FAILED","SET_LOADING","SET_BDATA","category","dropdownData","Course","CATEGORY_LIST","SET_CATEGORY_DATA","concat","SET_PARENT_CATEGORY_DATA","SET_CATEGORY_ERROR","queue","Queue","QUEUE_LIST","SET_QUEUE_DATA","SET_QUEUE_ERROR","combineReducers","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","Cookies","set","username","password","history","call","postCall","BASE_URL","data","put","push","message","loginUserFailed","registerUserSuccess","status","registerUserFailed","JSON","stringify","forgetPasswordSuccess","forgetPasswordFailed","takeEvery","all","fork","getCategoryData","getParentCategoryData","createCategory","watchCategoryData","watchCreateCategory","watchFetchParentCategoryData","courseSaga","getCall","setCategoryData","setParentCategoryData","categoryActionFailed","FETCH_CATEGORY_DATA","CREATE_CATEGORY","FETCH_PARENT_CATEGORY_DATA","getQueueData","createQueue","watchQueueData","watchCreateQueue","queueSaga","setQueueData","queueActionFailed","FETCH_QUEUE_DATA","CREATE_QUEUE","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","configureStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","run","sagas","initalRender","ReactDOM","getElementById","catch","resolve","options","post","putCall","get","deleteCall","delete","decoded","jwtDecode","currentTime","now","exp","console","warn","parse","UPDATE_CATEGORY","DELETE_CATEGORY","UPDATE_QUEUE","DELETE_QUEUE","loginUser","registerUser","logoutUser","loadingStatus","setBData"],"mappings":"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","file":"static/js/main.bbb875f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, useLocation, Redirect } from \"react-router-dom\";\r\nimport { isUserAuthenticated, getLoggedInUser } from \"./helpers/authUtils\";\r\n// lazy load all the views\r\nconst Home = React.lazy(() => import(\"./components/home/home\"));\r\nconst PrescriptionPdf = React.lazy(() =>\r\n  import(\"./components/admin/prescriptionPdf\")\r\n);\r\n\r\nconst Login = React.lazy(() => import(\"./components/login/login\"));\r\nconst Logout = React.lazy(() => import(\"./components/logout/logout\"));\r\nconst AboutUs = React.lazy(() => import(\"./components/aboutus\"));\r\nconst FAQ = React.lazy(() => import(\"./components/faq\"));\r\nconst TC = React.lazy(() => import(\"./components/tc\"));\r\nconst NS = React.lazy(() => import(\"./components/support\"));\r\nconst PAP = React.lazy(() => import(\"./components/pp\"));\r\nconst NotFound = React.lazy(() => import(\"./components/notfound\"));\r\nconst ContactUs = React.lazy(() => import(\"./components/contactus\"));\r\nconst Register = React.lazy(() => import(\"./components/signup/signup\"));\r\nconst Admin = React.lazy(() => import(\"./components/admin/admin\"));\r\nconst ResetPassword = React.lazy(() => import(\"./components/reset-password\"));\r\nconst NonAuthRoute = ({ component: Component, roles, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      const isAuthTokenValid = isUserAuthenticated();\r\n\r\n      if (\r\n        isAuthTokenValid &&\r\n        (props.location.pathname === \"/signup\" ||\r\n          props.location.pathname === \"/login\")\r\n      ) {\r\n        return (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        );\r\n      }\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nfunction NoMatch() {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        No match for <code>{location.pathname}</code>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\nconst PrivateRoute = ({ component: Component, roles, userInfo, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      const isAuthTokenValid = isUserAuthenticated();\r\n      if (!isAuthTokenValid) {\r\n        return (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        );\r\n      }\r\n      if (isAuthTokenValid) {\r\n        if (\r\n          userInfo &&\r\n          userInfo.role_name === \"Doctors\" &&\r\n          props.location.pathname !== \"/app/subscription\" &&\r\n          new Date(userInfo.subscription_active_at) < new Date()\r\n        ) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/app/subscription\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n        /* else if(userInfo && userInfo.role_name === 'Doctors' && !userInfo.document_verified && props.location.pathname !== '/app/dashboard'){\r\n        return <Redirect to={{ pathname: '/app/dashboard', state: { from: props.location } }} />\r\n      } */\r\n      }\r\n      if (\r\n        isAuthTokenValid &&\r\n        (props.location.pathname === \"/signup\" ||\r\n          props.location.pathname === \"/login\")\r\n      ) {\r\n        return (\r\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        );\r\n      }\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    exact: true,\r\n    name: \"Login\",\r\n    component: Login,\r\n    route: NonAuthRoute,\r\n  },\r\n  { path: \"/logout\", name: \"Logout\", component: Logout, route: Route },\r\n  {\r\n    path: \"/signup\",\r\n    exact: true,\r\n    name: \"signup\",\r\n    component: Register,\r\n    route: NonAuthRoute,\r\n  },\r\n  {\r\n    path: \"/support\",\r\n    exact: true,\r\n    name: \"signup\",\r\n    component: NS,\r\n    route: NonAuthRoute,\r\n  },\r\n  {\r\n    path: \"/reset-password\",\r\n    exact: true,\r\n    name: \"reset-password\",\r\n    component: ResetPassword,\r\n    route: NonAuthRoute,\r\n  },\r\n  {\r\n    path: \"/about-us\",\r\n    layout: \"nonAuth\",\r\n    exact: true,\r\n    name: \"AboutUS\",\r\n    component: AboutUs,\r\n    route: Route,\r\n  },\r\n  {\r\n    path: \"/faq\",\r\n    layout: \"nonAuth\",\r\n    exact: true,\r\n    name: \"FAQ\",\r\n    component: FAQ,\r\n    route: Route,\r\n  },\r\n  {\r\n    path: \"/term-of-service\",\r\n    layout: \"nonAuth\",\r\n    exact: true,\r\n    name: \"TC\",\r\n    component: TC,\r\n    route: Route,\r\n  },\r\n  {\r\n    path: \"/privacy-policy\",\r\n    layout: \"nonAuth\",\r\n    exact: true,\r\n    name: \"PAP\",\r\n    component: PAP,\r\n    route: Route,\r\n  },\r\n  {\r\n    path: \"/contact-us\",\r\n    layout: \"nonAuth\",\r\n    exact: true,\r\n    name: \"ContactUs\",\r\n    component: ContactUs,\r\n    route: Route,\r\n  },\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    name: \"home\",\r\n    layout: \"nonAuth\",\r\n    component: Home,\r\n    route: Route,\r\n  },\r\n  { path: \"/app\", name: \"Admin\", component: Admin, route: PrivateRoute },\r\n  {\r\n    path: \"/pdf\",\r\n    name: \"Pdf\",\r\n    component: PrescriptionPdf,\r\n    route: PrivateRoute,\r\n  },\r\n  {\r\n    path: \"notfound\",\r\n    name: \"notfound\",\r\n    exact: true,\r\n    component: NotFound,\r\n    layout: \"nonAuth\",\r\n    route: Route,\r\n  },\r\n];\r\n\r\nexport { routes, PrivateRoute };\r\n","\r\nimport React, { Component, Suspense } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { routes } from './routes';\r\nimport { isUserAuthenticated } from './helpers/authUtils';\r\nimport Loadable from 'react-loadable';\r\nimport { setLoadingData, loginUserSuccess } from './redux/actions';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n// Lazy loading and code splitting - \r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>\r\n\r\n// All layouts/containers\r\nconst NonAuthLayout = Loadable({\r\n  loader: () => import('./layout/NonAuthLayout'),\r\n  render(loaded, props) {\r\n    let Component = loaded.default;\r\n    return <Component {...props} />;\r\n  },\r\n  loading\r\n});\r\nconst AdminLayout = Loadable({\r\n  loader: () => import('./layout/AdminLayout'),\r\n  render(loaded, props) {\r\n    let Component = loaded.default;\r\n    return <Component {...props} />;\r\n  },\r\n  loading\r\n});\r\n/**\r\n * Exports the component with layout wrapped to it\r\n * @param {} WrappedComponent \r\n */\r\nconst withLayout = (WrappedComponent) => {\r\n  const HOC = class extends Component {\r\n    render() {\r\n      return <WrappedComponent {...this.props} />;\r\n    }\r\n  };\r\n  return connect()(HOC);\r\n}\r\nclass App extends Component {\r\n  /**\r\n * Returns the layout component based on different properties\r\n * @param {*} props \r\n */\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.loginUserSuccess(props.userData);\r\n  }\r\n\r\n  getLayout = (layout) => {\r\n    return layout ? NonAuthLayout : (isUserAuthenticated() ? AdminLayout : NonAuthLayout);\r\n  }\r\n  render() {\r\n    return (\r\n      // rendering the router with layout\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <ToastContainer />\r\n          {routes.map((route, index) => {\r\n            return (\r\n              <route.route\r\n                key={index}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                roles={route.roles}\r\n                userInfo={this.props.user}\r\n                component={withLayout((props) => {\r\n                  const Layout = this.getLayout(route.layout);\r\n                  return (\r\n                    <Suspense fallback={loading()}>\r\n                      <Layout {...props}>\r\n                        <route.component {...props} />\r\n                      </Layout>\r\n                    </Suspense>\r\n                  );\r\n                })}\r\n              />\r\n            );\r\n          })}\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.Auth.isAuthenticated,\r\n    isLoading: state.Auth.isLoading,\r\n    user: state.Auth.user\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { setLoadingData, loginUserSuccess })(App);\r\n","import { getUserToken } from './authUtils';\r\nimport axios from 'axios';\r\nconst excludeUrls = ['get-customers', 'check-email-exist', 'check-mobile-exist', 'get-prescriptions', 'check-customer-email-exist','check-customer-mobile-exist']\r\naxios.interceptors.request.use(function (config) {\r\n  const token = getUserToken();\r\n  const skipUrl = excludeUrls.find(r => config.url.includes(r));\r\n  if (!skipUrl) {\r\n    document.body.classList.add('custom-loader')\r\n  }\r\n  if (token) {\r\n    config.headers.Authorization = `JWT ${token}`;\r\n  }\r\n  if (config.url.includes('api/users/update-profile') && (config.method == 'post' || config.method == 'POST')) {\r\n  }\r\n  else {\r\n    config.headers['Content-Type'] = 'application/json';\r\n    config.headers['Accept'] = 'application/json';\r\n  }\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  document.body.classList.remove('custom-loader');\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(function (response) {\r\n  // Any status code that lie within the range of 2xx cause this function to trigger\r\n  // Do something with response data\r\n  //put(setLoadingData(false));\r\n  document.body.classList.remove('custom-loader');\r\n  return response;\r\n}, function (error) {\r\n  //put(setLoadingData(false));\r\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n  // Do something with response error\r\n  document.body.classList.remove('custom-loader');\r\n  return Promise.reject(error);\r\n});\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n    SET_LOADING, SET_BDATA\r\n} from '../../helpers/actionTypes';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n    isLoading: false,\r\n    bdata: []\r\n};\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, login_error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, login_error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, registerError: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, registerError: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case SET_LOADING:\r\n            return { ...state, isLoading: action.payload };\r\n        case SET_BDATA:\r\n            return { ...state, bdata: action.payload };\r\n        default: return { ...state };\r\n    }\r\n}\r\n\r\nexport default Auth;","\r\nimport {\r\n    CATEGORY_LIST,\r\n    UPDATE_CATEGORY,\r\n    DELETE_CATEGORY,\r\n    CREATE_CATEGORY,\r\n    SET_CATEGORY_DATA,\r\n    SET_PARENT_CATEGORY_DATA,\r\n    SET_CATEGORY_ERROR\r\n} from '../../helpers/actionTypes';\r\nconst INIT_STATE = {\r\n    category: [],\r\n    dropdownData: []\r\n};\r\nconst Course = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_LIST:\r\n            return { ...state, loading: true };\r\n        case SET_CATEGORY_DATA:\r\n            return { ...state, category: state.category.concat(action.payload) };\r\n        case SET_PARENT_CATEGORY_DATA:\r\n            return { ...state, dropdownData: action.payload };\r\n        case SET_CATEGORY_ERROR:\r\n            return { ...state, error: action.payload };\r\n        default: return { ...state };\r\n    }\r\n}\r\nexport default Course;","\r\nimport {\r\n    QUEUE_LIST,\r\n    UPDATE_QUEUE,\r\n    DELETE_QUEUE,\r\n    CREATE_QUEUE,\r\n    SET_QUEUE_DATA,\r\n    SET_QUEUE_ERROR\r\n} from '../../helpers/actionTypes';\r\nconst INIT_STATE = {\r\n    queue: []\r\n};\r\nconst Queue = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case QUEUE_LIST:\r\n            return { ...state, loading: true };\r\n        case SET_QUEUE_DATA:\r\n            return { ...state, queue: state.queue.concat(action.payload) };\r\n        case SET_QUEUE_ERROR:\r\n            return { ...state, error: action.payload };\r\n        default: return { ...state };\r\n    }\r\n}\r\nexport default Queue;","import { combineReducers } from 'redux';\r\nimport Auth from './auth/reducers';\r\nimport Course from './course/reducers';\r\nimport Queue from './queue/reducers'\r\n\r\nexport default combineReducers({\r\n    Auth, Course, Queue\r\n});","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n    LOGIN_USER,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    FORGET_PASSWORD\r\n} from '../../helpers/actionTypes';\r\n\r\nimport {\r\n    BASE_URL\r\n} from '../../helpers/constants';\r\n\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed\r\n} from './actions';\r\nimport { postCall } from '../../helpers/axiosUtils'\r\n/**\r\n * Sets the session\r\n * @param {*} user \r\n */\r\nconst setSession = (user) => {\r\n    let cookies = new Cookies();\r\n    if (user) {\r\n        //cookies.set(\"user\", JSON.stringify(user.userDetails), { path: \"/\" });\r\n        cookies.set(\"token\", user.token, { path: \"/\" });\r\n    }\r\n    else {\r\n        //cookies.remove(\"user\", { path: \"/\" });\r\n        cookies.remove(\"token\", { path: \"/\" });\r\n    }\r\n\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password \r\n */\r\nfunction* login({ payload: { username, password, history } }) {\r\n    try {\r\n        const response = yield call(postCall, `${BASE_URL}api/common/auth-login/`, {\r\n            username: username,\r\n            password: password\r\n        });\r\n        setSession(response.data);\r\n        yield put(loginUserSuccess(response.data));        \r\n        history.push(\"/app/dashboard\");\r\n    } catch (error) {\r\n        let message;\r\n        message = error.message ? error.message : 'Invalid credentials';\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0 \r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push(\"/\");\r\n        });\r\n    } catch (error) { }\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { data, history } }) {\r\n    try {\r\n        const response = yield call(postCall, `${BASE_URL}api/common/verify/`, data);\r\n        setSession(response.data);\r\n        history.push(\"/app/dashboard\");\r\n        yield put(registerUserSuccess(response.data));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500: message = 'Internal Server Error'; break;\r\n            case 401: message = 'Invalid credentials'; break;\r\n            default: message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    try {\r\n        const response = null;\r\n        //const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500: message = 'Internal Server Error'; break;\r\n            case 401: message = 'Invalid credentials'; break;\r\n            default: message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([\r\n        fork(watchLoginUser),\r\n        fork(watchLogoutUser),\r\n        fork(watchRegisterUser),\r\n        fork(watchForgetPassword),\r\n    ]);\r\n}\r\n\r\nexport default authSaga;","import {\r\n    CATEGORY_LIST,\r\n    SET_CATEGORY_DATA,\r\n    UPDATE_CATEGORY,\r\n    DELETE_CATEGORY,\r\n    CREATE_CATEGORY,\r\n    FETCH_CATEGORY_DATA,\r\n    FETCH_PARENT_CATEGORY_DATA\r\n} from '../../helpers/actionTypes';\r\nimport { setCategoryData, categoryActionFailed, setParentCategoryData } from './actions'\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { getCall, postCall } from '../../helpers/axiosUtils'\r\nimport {\r\n    BASE_URL\r\n} from '../../helpers/constants';\r\n/**\r\n * Fetech Category Data\r\n */\r\nfunction* getCategoryData() {\r\n    const response = yield call(getCall, `${BASE_URL}categories/all`);\r\n    yield put(setCategoryData(response.data));\r\n}\r\n/**\r\n * Fetech Category Data\r\n */\r\nfunction* getParentCategoryData() {\r\n    const response = yield call(getCall, `${BASE_URL}categories/getParentCategory`);\r\n    yield put(setParentCategoryData(response.data));\r\n}\r\n/**\r\n * Create Category\r\n */\r\nfunction* createCategory({ payload: { data, history } }) {\r\n    try {\r\n        const response = yield call(postCall, `${BASE_URL}categories/create`, data);\r\n        yield put(setCategoryData(response.data));\r\n    }\r\n    catch (error) {\r\n        let message;\r\n        message = error.message ? error.message : 'Invalid Data';\r\n        yield put(categoryActionFailed({ type: 'create', message: message }));\r\n    }\r\n}\r\nexport function* watchCategoryData() {\r\n    yield takeEvery(FETCH_CATEGORY_DATA, getCategoryData);\r\n}\r\nexport function* watchCreateCategory() {\r\n    yield takeEvery(CREATE_CATEGORY, createCategory);\r\n}\r\nexport function* watchFetchParentCategoryData() {\r\n    yield takeEvery(FETCH_PARENT_CATEGORY_DATA, getParentCategoryData);\r\n}\r\nfunction* courseSaga() {\r\n    yield all([\r\n        fork(watchCategoryData),\r\n        fork(watchCreateCategory),\r\n        fork(watchFetchParentCategoryData),\r\n    ]);\r\n}\r\n\r\nexport default courseSaga;","import {\r\n    QUEUE_LIST,\r\n    SET_QUEUE_DATA,\r\n    UPDATE_QUEUE,\r\n    DELETE_QUEUE,\r\n    CREATE_QUEUE,\r\n    FETCH_QUEUE_DATA,\r\n} from '../../helpers/actionTypes';\r\nimport { setQueueData, queueActionFailed } from './actions'\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { getCall, postCall } from '../../helpers/axiosUtils'\r\nimport {\r\n    BASE_URL\r\n} from '../../helpers/constants';\r\n/**\r\n * Fetech Queue Data\r\n */\r\nfunction* getQueueData() {\r\n    const response = yield call(getCall, `${BASE_URL}categories/all`);\r\n    yield put(setQueueData(response.data));\r\n}\r\n/**\r\n * Create Category\r\n */\r\nfunction* createQueue({ payload: { data, history } }) {\r\n    try {\r\n        const response = yield call(postCall, `${BASE_URL}queue/`, data);\r\n        yield put(setQueueData(response.data));\r\n    }\r\n    catch (error) {\r\n        let message;\r\n        message = error.message ? error.message : 'Invalid Data';\r\n        yield put(queueActionFailed({ type: 'create', message: message }));\r\n    }\r\n}\r\nexport function* watchQueueData() {\r\n    yield takeEvery(FETCH_QUEUE_DATA, getQueueData);\r\n}\r\nexport function* watchCreateQueue() {\r\n    yield takeEvery(CREATE_QUEUE, createQueue);\r\n}\r\nfunction* queueSaga() {\r\n    yield all([\r\n        fork(watchQueueData),\r\n        fork(watchCreateQueue),\r\n    ]);\r\n}\r\n\r\nexport default queueSaga;","import { all, fork } from \"redux-saga/effects\";\r\nimport authSaga from './auth/saga';\r\nimport courseSaga from './course/saga'\r\nimport queueSaga from './queue/saga'\r\nexport default function* rootSaga() {\r\n  yield all([fork(authSaga), fork(courseSaga), fork(queueSaga)]);\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\"; import reducers from './reducers';\r\nimport sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        composeEnhancers(\r\n            applyMiddleware(...middlewares)\r\n        ),\r\n    );\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './helpers/axiosInterceptors';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\nimport { getUserToken } from './helpers/authUtils';\r\nimport { postCall } from './helpers/axiosUtils';\r\nimport { BASE_URL } from './helpers/constants';\r\nimport './App.scss';\r\n//import './app.css';\r\nimport { Cookies } from \"react-cookie\";\r\n\r\n// app inital context\r\nfunction initalRender(data) {\r\n  ReactDOM.render(\r\n    <React.Fragment>\r\n      <Provider store={configureStore()}>\r\n        <App userData={data} />\r\n      </Provider>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\nfunction deleteAllCookies() {\r\n  return new Promise((resolve, reject) => {\r\n    let cookies = new Cookies();\r\n    cookies.remove(\"token\", { path: \"/\" });\r\n    resolve(true)\r\n  })\r\n\r\n}\r\n\r\nlet token = getUserToken();\r\nif (token) {\r\n  let data = `{\"token\":\"${token}\"}`;\r\n  postCall(`${BASE_URL}api-token-refresh/`, data).then(r => {\r\n    initalRender(r.data.user)\r\n  }).catch(error => {\r\n    deleteAllCookies().then(r => {\r\n      initalRender(null)\r\n    });\r\n  })\r\n}\r\nelse {\r\n  initalRender(null);\r\n}\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const BASE_URL = 'http://mymedbook.in/backend/'\n","import axios from 'axios';\r\n\r\nconst postCall = (url, data, options) => {\r\n    return axios.post(\r\n        url, data, options\r\n    )\r\n}\r\nconst putCall = (url, data) => {\r\n    return axios.put(\r\n        url, data\r\n    )\r\n}\r\nconst getCall = (url, options) => {\r\n    return axios.get(\r\n        url, options\r\n    )\r\n}\r\nconst deleteCall = (url, options) => {\r\n    return axios.delete(\r\n        url, options\r\n    )\r\n}\r\nconst initialGetCall = (url, options) => {\r\n    return axios.get(\r\n        url, options\r\n    )\r\n}\r\nexport { postCall, putCall, getCall, deleteCall, initialGetCall };","import jwtDecode from 'jwt-decode';\r\nimport { Cookies } from \"react-cookie\";\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n    const token = getUserToken();\r\n    if (!token) {\r\n        return false;\r\n    }\r\n    const decoded = jwtDecode(token);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getUserToken = () => {\r\n    const cookies = new Cookies();\r\n    const token = cookies.get(\"token\");\r\n    return token && token != \"undefined\" ? token : null;\r\n}\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get(\"user\");\r\n    return user && user != \"undefined\" ? (typeof (user) == 'object' ? user : JSON.parse(user)) : null;\r\n}\r\n\r\nexport { isUserAuthenticated, getLoggedInUser, getUserToken };","export const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\nexport const UPDATE_USER_LIST = 'UPDATE_USER_LIST';\r\nexport const USER_DATA = 'USER_DATA';\r\nexport const SET_ROLE_DATA = 'SET_ROLE_DATA';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_BDATA = 'SET_BDATA';\r\n// course related constants\r\nexport const SET_CATEGORY_DATA = 'SET_CATEGORY_DATA';\r\nexport const FETCH_CATEGORY_DATA = 'FETCH_CATEGORY_DATA';\r\nexport const SET_PARENT_CATEGORY_DATA = 'SET_PARENT_CATEGORY_DATA';\r\nexport const FETCH_PARENT_CATEGORY_DATA = 'FETCH_PARENT_CATEGORY_DATA';\r\nexport const CATEGORY_LIST = 'CATEGORY_LIST';\r\nexport const CREATE_CATEGORY = 'CREATE_CATEGORY';\r\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY';\r\nexport const SET_CATEGORY_ERROR = 'SET_CATEGORY_ERROR';\r\n// Queue related constants\r\nexport const SET_QUEUE_DATA = 'SET_QUEUE_DATA';\r\nexport const FETCH_QUEUE_DATA = 'FETCH_QUEUE_DATA';\r\nexport const QUEUE_LIST = 'QUEUE_LIST';\r\nexport const CREATE_QUEUE = 'CREATE_QUEUE';\r\nexport const UPDATE_QUEUE = 'UPDATE_QUEUE';\r\nexport const DELETE_QUEUE = 'DELETE_QUEUE';\r\nexport const SET_QUEUE_ERROR = 'SET_QUEUE_ERROR';","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n    SET_LOADING,\r\n    SET_BDATA\r\n} from '../../helpers/actionTypes';\r\n\r\nexport const loginUser = (username, password, history) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password, history }\r\n});\r\n\r\nexport const loginUserSuccess = (user: any) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const loginUserFailed = (error: any) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error\r\n});\r\n\r\nexport const registerUser = (data, history) => ({\r\n    type: REGISTER_USER,\r\n    payload: { data, history }\r\n});\r\n\r\nexport const registerUserSuccess = (user: any) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user\r\n});\r\n\r\nexport const registerUserFailed = (error: any) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error\r\n});\r\n\r\nexport const logoutUser = (history: any) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history }\r\n});\r\n\r\nexport const forgetPassword = (username: any) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username }\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus: any) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus\r\n});\r\n\r\nexport const forgetPasswordFailed = (error: any) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error\r\n});\r\nexport const setLoadingData = (loadingStatus: any) => ({\r\n    type: SET_LOADING,\r\n    payload: loadingStatus\r\n});\r\nexport const setBData = (data) => ({\r\n    type: SET_BDATA,\r\n    payload: data\r\n});","import { CREATE_CATEGORY, UPDATE_CATEGORY, DELETE_CATEGORY, SET_CATEGORY_DATA, FETCH_CATEGORY_DATA, SET_CATEGORY_ERROR, FETCH_PARENT_CATEGORY_DATA, SET_PARENT_CATEGORY_DATA } from '../../helpers/actionTypes'\r\n\r\nexport const createCategory = (data, history) => ({\r\n    type: CREATE_CATEGORY,\r\n    payload: { data, history }\r\n});\r\nexport const updateCategory = (data, history) => ({\r\n    type: UPDATE_CATEGORY,\r\n    payload: { data, history }\r\n});\r\nexport const deleteCategory = (data, history) => ({\r\n    type: DELETE_CATEGORY,\r\n    payload: { data, history }\r\n});\r\nexport const setCategoryData = (category) => ({\r\n    type: SET_CATEGORY_DATA,\r\n    payload: category\r\n});\r\nexport const fetchCategoryData = (category) => ({\r\n    type: FETCH_CATEGORY_DATA,\r\n    payload: category\r\n});\r\nexport const fetchParentCategoryData = (category) => ({\r\n    type: FETCH_PARENT_CATEGORY_DATA,\r\n    payload: category\r\n});\r\nexport const setParentCategoryData = (category) => ({\r\n    type: SET_PARENT_CATEGORY_DATA,\r\n    payload: category\r\n});\r\nexport const categoryActionFailed = (error) => ({\r\n    type: SET_CATEGORY_ERROR,\r\n    payload: error\r\n});","import { CREATE_QUEUE, UPDATE_QUEUE, DELETE_QUEUE, SET_QUEUE_DATA, FETCH_QUEUE_DATA, SET_QUEUE_ERROR } from '../../helpers/actionTypes'\r\n\r\nexport const createQueue = (data, history) => ({\r\n    type: CREATE_QUEUE,\r\n    payload: { data, history }\r\n});\r\nexport const updateQueue = (data, history) => ({\r\n    type: UPDATE_QUEUE,\r\n    payload: { data, history }\r\n});\r\nexport const deleteQueue = (data, history) => ({\r\n    type: DELETE_QUEUE,\r\n    payload: { data, history }\r\n});\r\nexport const setQueueData = (queue) => ({\r\n    type: SET_QUEUE_DATA,\r\n    payload: queue\r\n});\r\nexport const fetchQueueData = (queue) => ({\r\n    type: FETCH_QUEUE_DATA,\r\n    payload: queue\r\n});\r\nexport const queueActionFailed = (error) => ({\r\n    type: SET_QUEUE_ERROR,\r\n    payload: error\r\n});","export * from './auth/actions';\r\nexport * from './course/actions';\r\nexport * from './queue/actions';"],"sourceRoot":""}