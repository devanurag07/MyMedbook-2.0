{"version":3,"sources":["ui/input.js","helpers/utils.js","ui/button.js","components/signup/signup.js"],"names":["Input","props","inputElement","elementType","className","elementClassName","elementConfig","value","onChange","changed","filterLabel","options","map","option","id","optionKey","label","labelClassName","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","Register","inputChangedHandler","controlName","event","postCall","BASE_URL","email","target","then","r","setState","mobileExist","catch","er","emailExist","submitHandler","values","preventDefault","otp","form_data","state","formValues","registerUser","history","sendOTP","switchAuthModeHandler","prevState","isSignup","first_name","mobile","password","data","showOtp","Fragment","params","this","registerError","color","isOpen","onValidSubmit","model","type","name","placeholder","autoComplete","bind","validate","pattern","disabled","to","Component","connect","Auth","user","loading"],"mappings":"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","file":"static/js/14.ba09623c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={props.elementClassName}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={props.elementClassName}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={props.elementClassName}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    <option value={false}>{props.elementConfig.filterLabel}</option>\r\n                    {props.elementConfig.options.map((option) => (\r\n                        <option key={option.id} value={option.id}>\r\n                            {option[props.elementConfig.optionKey]}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={props.elementClassName}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {props.label && <label className={props.labelClassName}>{props.label}</label>}\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Input;","\r\nexport const updateObject = (oldObject: any, updatedProperties: any) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value:any, rules:any) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}\r\n","import React from 'react';\r\n\r\nconst button = (props:any) => (\r\n    <button type=\"submit\"\r\n        disabled={props.disabled}\r\n        className={props.className}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport { updateObject, checkValidity } from '../../helpers/utils';\r\nimport Input from '../../ui/input';\r\nimport Button from '../../ui/button';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../../assets/scss/login.scss';\r\nimport { registerUser } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport { AvForm, AvInput } from 'availity-reactstrap-validation';\r\nimport { Alert } from 'reactstrap';\r\nimport { postCall } from '../../helpers/axiosUtils'\r\nimport { BASE_URL } from '../../helpers/constants'\r\nimport Particles from 'react-particles-js';\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formValues: {\r\n                first_name: '',\r\n                email: '',\r\n                mobile: '',\r\n                password: '',\r\n                otp: ''\r\n            },\r\n            emailExist: false\r\n\r\n        }\r\n    }\r\n    inputChangedHandler = (controlName,event) => {\r\n        if(controlName === 'mobile'){\r\n            postCall(BASE_URL + `api/common/check-mobile-exist/`, { email: event.target.value }).then(r => {\r\n                this.setState({ mobileExist: false });\r\n            }).catch(er => {\r\n                this.setState({ mobileExist: true });\r\n            })\r\n        }\r\n        else {\r\n            postCall(BASE_URL + `api/common/check-email-exist/`, { email: event.target.value }).then(r => {\r\n                this.setState({ emailExist: false });\r\n            }).catch(er => {\r\n                this.setState({ emailExist: true });\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    sendOTP(data) {\r\n        postCall(BASE_URL + `api/common/`, data).then(r => {\r\n            this.setState({ showOtp: true });\r\n        }).catch(er => {\r\n            this.setState({ showOtp: false });\r\n        })\r\n    }\r\n    submitHandler = (event, values) => {\r\n        event.preventDefault();\r\n        if (values.otp) {\r\n            let form_data = this.state.formValues\r\n            form_data['otp'] = values.otp\r\n            this.props.registerUser(form_data, this.props.history);\r\n        }\r\n        else {\r\n            this.setState({\r\n                formValues: values\r\n            })\r\n            this.sendOTP(values)\r\n        }\r\n    }\r\n    switchAuthModeHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { isSignup: !prevState.isSignup };\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"position-relative\">\r\n                    <Particles id=\"particles-js\" params={{\r\n                        \"particles\": {\r\n                            \"number\": {\r\n                                \"value\": 160,\r\n                                \"density\": {\r\n                                    \"enable\": true,\r\n                                    \"value_area\": 800\r\n                                }\r\n                            },\r\n                            \"color\": {\r\n                                \"value\": \"#1360ef\"\r\n                            },\r\n                            \"shape\": {\r\n                                \"type\": \"circle\",\r\n                                \"stroke\": {\r\n                                    \"width\": 0,\r\n                                    \"color\": \"#f94f15\"\r\n                                },\r\n                                \"polygon\": {\r\n                                    \"nb_sides\": 5\r\n                                },\r\n                                \"image\": {\r\n                                    \"src\": \"img/github.svg\",\r\n                                    \"width\": 100,\r\n                                    \"height\": 100\r\n                                }\r\n                            },\r\n                            \"opacity\": {\r\n                                \"value\": 1,\r\n                                \"random\": true,\r\n                                \"anim\": {\r\n                                    \"enable\": true,\r\n                                    \"speed\": 1,\r\n                                    \"opacity_min\": 0,\r\n                                    \"sync\": false\r\n                                }\r\n                            },\r\n                            \"size\": {\r\n                                \"value\": 3,\r\n                                \"random\": true,\r\n                                \"anim\": {\r\n                                    \"enable\": false,\r\n                                    \"speed\": 4,\r\n                                    \"size_min\": 0.3,\r\n                                    \"sync\": false\r\n                                }\r\n                            },\r\n                            \"line_linked\": {\r\n                                \"enable\": false,\r\n                                \"distance\": 150,\r\n                                \"color\": \"#ffffff\",\r\n                                \"opacity\": 0.4,\r\n                                \"width\": 1\r\n                            },\r\n                            \"move\": {\r\n                                \"enable\": true,\r\n                                \"speed\": 1,\r\n                                \"direction\": \"none\",\r\n                                \"random\": true,\r\n                                \"straight\": false,\r\n                                \"out_mode\": \"out\",\r\n                                \"bounce\": false,\r\n                                \"attract\": {\r\n                                    \"enable\": false,\r\n                                    \"rotateX\": 600,\r\n                                    \"rotateY\": 600\r\n                                }\r\n                            }\r\n                        },\r\n                        \"interactivity\": {\r\n                            \"detect_on\": \"canvas\",\r\n                            \"events\": {\r\n                                \"onhover\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"bubble\"\r\n                                },\r\n                                \"onclick\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"repulse\"\r\n                                },\r\n                                \"resize\": true\r\n                            },\r\n                            \"modes\": {\r\n                                \"grab\": {\r\n                                    \"distance\": 400,\r\n                                    \"line_linked\": {\r\n                                        \"opacity\": 1\r\n                                    }\r\n                                },\r\n                                \"bubble\": {\r\n                                    \"distance\": 250,\r\n                                    \"size\": 0,\r\n                                    \"duration\": 2,\r\n                                    \"opacity\": 0,\r\n                                    \"speed\": 3\r\n                                },\r\n                                \"repulse\": {\r\n                                    \"distance\": 400,\r\n                                    \"duration\": 0.4\r\n                                },\r\n                                \"push\": {\r\n                                    \"particles_nb\": 4\r\n                                },\r\n                                \"remove\": {\r\n                                    \"particles_nb\": 2\r\n                                }\r\n                            }\r\n                        },\r\n                        \"retina_detect\": true\r\n                    }} />\r\n                    <div className=\"container\">\r\n                        <div className=\"row  text-center\">\r\n                            <div className=\"col\">\r\n                                <h1>Sign Up</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <div className=\"page-content\">\r\n                    <section className=\"register\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center text-center\">\r\n                                <div className=\"col-lg-8 col-md-12\">\r\n                                    <div className=\"mb-6\"> <span className=\"badge badge-primary-soft p-2\">\r\n                                        <i className=\"la la-exclamation ic-3x rotation\"></i>\r\n                                    </span>\r\n                                        <h2 className=\"mt-3\">Welcome To MyMedbook</h2>\r\n                                        <p className=\"lead\">Enter your details to sign up.</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-8 col-md-10 ms-auto me-auto\">\r\n                                    <div className=\"register-form text-center\">\r\n                                        {this.props.registerError && <Alert color=\"danger\" isOpen={this.props.registerError ? true : false}>\r\n                                            <div>Please enter valid otp</div>\r\n                                        </Alert>}\r\n                                        <AvForm onValidSubmit={this.submitHandler} model={this.state.formValues}>\r\n                                            {!this.state.showOtp &&\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <AvInput type=\"text\" name=\"first_name\" className=\"form-control\" placeholder=\"Name\" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <AvInput type=\"email\" autoComplete=\"off\" name=\"email\" onChange={this.inputChangedHandler.bind(this, 'email')} className=\"form-control\" validate={{ email: true }} placeholder=\"Email\" required />\r\n                                                        </div>\r\n                                                        {this.state.emailExist && <p className=\"text-danger\">Email already exist</p>}\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <AvInput type=\"number\" name=\"mobile\" autoComplete=\"off\" onChange={this.inputChangedHandler.bind(this, 'mobile')} className=\"form-control\" validate={{ pattern: { value: /^\\d{10}$/ } }} placeholder=\"Mobile\" required />\r\n                                                        </div>\r\n                                                        {this.state.mobileExist && <p className=\"text-danger\">Mobile already exist</p>}\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <AvInput type=\"password\" minLength=\"6\" name=\"password\" className=\"form-control\" placeholder=\"Password\" required />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>}\r\n                                            {this.state.showOtp &&\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <AvInput type=\"number\" name=\"otp\" className=\"form-control\" placeholder=\"Please enter otp\" required />\r\n                                                        </div>\r\n                                                        <div className=\"form-text mb-2\">Please enter the otp that you received your registered Mobile</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            }\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-12\">\r\n                                                    <input type=\"submit\" disabled={this.state.mobileExist || this.state.emailExist} value={this.state.showOtp ? 'Verify OTP' : 'Create Account'} className=\"btn btn-primary\" />\r\n                                                    <span className=\"mt-4 d-block\">Have An Account ? <NavLink to=\"/login\" >\r\n                                                        <i>Sign In!</i> </NavLink></span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </AvForm>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div></React.Fragment>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { user, loading, registerError } = state.Auth;\r\n    return { user, loading, registerError };\r\n};\r\nexport default connect(mapStateToProps, { registerUser })(Register);"],"sourceRoot":""}