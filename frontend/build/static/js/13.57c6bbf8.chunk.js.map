{"version":3,"sources":["ui/input.js","helpers/utils.js","ui/button.js","components/login/login.js"],"names":["Input","props","inputElement","elementType","className","elementClassName","elementConfig","value","onChange","changed","filterLabel","options","map","option","id","optionKey","label","labelClassName","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","Login","inputChangedHandler","event","controlName","updatedControls","state","controls","target","valid","validation","touched","setState","renderRedirectToRoot","isUserAuthenticated","to","submitHandler","values","username","password","preventDefault","loginUser","history","switchAuthModeHandler","prevState","isSignup","Fragment","this","params","src","alt","login_error","color","isOpen","onValidSubmit","type","name","placeholder","htmlFor","Component","connect","Auth","user","loading"],"mappings":"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","file":"static/js/13.57c6bbf8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={props.elementClassName}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={props.elementClassName}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={props.elementClassName}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    <option value={false}>{props.elementConfig.filterLabel}</option>\r\n                    {props.elementConfig.options.map((option) => (\r\n                        <option key={option.id} value={option.id}>\r\n                            {option[props.elementConfig.optionKey]}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={props.elementClassName}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n            {props.label && <label className={props.labelClassName}>{props.label}</label>}\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Input;","\r\nexport const updateObject = (oldObject: any, updatedProperties: any) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value:any, rules:any) => {\r\n    let isValid = true;\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    return isValid;\r\n}\r\n","import React from 'react';\r\n\r\nconst button = (props:any) => (\r\n    <button type=\"submit\"\r\n        disabled={props.disabled}\r\n        className={props.className}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport { updateObject, checkValidity } from '../../helpers/utils';\r\nimport Input from '../../ui/input';\r\nimport Button from '../../ui/button';\r\nimport '../../assets/scss/login.scss';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../redux/actions';\r\nimport { Alert } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { isUserAuthenticated } from '../../helpers/authUtils';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Particles from 'react-particles-js';\r\nimport { AvForm, AvInput } from 'availity-reactstrap-validation';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n    inputChangedHandler = (event: any, controlName: any) => {\r\n        const updatedControls = updateObject(this.state.controls, {\r\n            [controlName]: updateObject(this.state.controls[controlName], {\r\n                value: event.target.value,\r\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            })\r\n        });\r\n        this.setState({ controls: updatedControls });\r\n    }\r\n    /**\r\n     * Redirect to root\r\n     */\r\n    renderRedirectToRoot = () => {\r\n        const isAuthTokenValid = isUserAuthenticated();\r\n        if (isAuthTokenValid) {\r\n            return <Redirect to='/' />\r\n        }\r\n    }\r\n    submitHandler = (event, values) => {\r\n        if (values.username && values.password) {\r\n            event.preventDefault();\r\n            this.props.loginUser(values.username, values.password, this.props.history);\r\n        }\r\n        //this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\r\n    }\r\n    switchAuthModeHandler = () => {\r\n        this.setState((prevState: any) => {\r\n            return { isSignup: !prevState.isSignup };\r\n        });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderRedirectToRoot()}\r\n                <section className=\"position-relative\">\r\n                    <Particles id=\"particles-js\" params={{\r\n                        \"particles\": {\r\n                            \"number\": {\r\n                                \"value\": 160,\r\n                                \"density\": {\r\n                                    \"enable\": true,\r\n                                    \"value_area\": 800\r\n                                }\r\n                            },\r\n                            \"color\": {\r\n                                \"value\": \"#1360ef\"\r\n                            },\r\n                            \"shape\": {\r\n                                \"type\": \"circle\",\r\n                                \"stroke\": {\r\n                                    \"width\": 0,\r\n                                    \"color\": \"#f94f15\"\r\n                                },\r\n                                \"polygon\": {\r\n                                    \"nb_sides\": 5\r\n                                },\r\n                                \"image\": {\r\n                                    \"src\": \"img/github.svg\",\r\n                                    \"width\": 100,\r\n                                    \"height\": 100\r\n                                }\r\n                            },\r\n                            \"opacity\": {\r\n                                \"value\": 1,\r\n                                \"random\": true,\r\n                                \"anim\": {\r\n                                    \"enable\": true,\r\n                                    \"speed\": 1,\r\n                                    \"opacity_min\": 0,\r\n                                    \"sync\": false\r\n                                }\r\n                            },\r\n                            \"size\": {\r\n                                \"value\": 3,\r\n                                \"random\": true,\r\n                                \"anim\": {\r\n                                    \"enable\": false,\r\n                                    \"speed\": 4,\r\n                                    \"size_min\": 0.3,\r\n                                    \"sync\": false\r\n                                }\r\n                            },\r\n                            \"line_linked\": {\r\n                                \"enable\": false,\r\n                                \"distance\": 150,\r\n                                \"color\": \"#ffffff\",\r\n                                \"opacity\": 0.4,\r\n                                \"width\": 1\r\n                            },\r\n                            \"move\": {\r\n                                \"enable\": true,\r\n                                \"speed\": 1,\r\n                                \"direction\": \"none\",\r\n                                \"random\": true,\r\n                                \"straight\": false,\r\n                                \"out_mode\": \"out\",\r\n                                \"bounce\": false,\r\n                                \"attract\": {\r\n                                    \"enable\": false,\r\n                                    \"rotateX\": 600,\r\n                                    \"rotateY\": 600\r\n                                }\r\n                            }\r\n                        },\r\n                        \"interactivity\": {\r\n                            \"detect_on\": \"canvas\",\r\n                            \"events\": {\r\n                                \"onhover\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"bubble\"\r\n                                },\r\n                                \"onclick\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"repulse\"\r\n                                },\r\n                                \"resize\": true\r\n                            },\r\n                            \"modes\": {\r\n                                \"grab\": {\r\n                                    \"distance\": 400,\r\n                                    \"line_linked\": {\r\n                                        \"opacity\": 1\r\n                                    }\r\n                                },\r\n                                \"bubble\": {\r\n                                    \"distance\": 250,\r\n                                    \"size\": 0,\r\n                                    \"duration\": 2,\r\n                                    \"opacity\": 0,\r\n                                    \"speed\": 3\r\n                                },\r\n                                \"repulse\": {\r\n                                    \"distance\": 400,\r\n                                    \"duration\": 0.4\r\n                                },\r\n                                \"push\": {\r\n                                    \"particles_nb\": 4\r\n                                },\r\n                                \"remove\": {\r\n                                    \"particles_nb\": 2\r\n                                }\r\n                            }\r\n                        },\r\n                        \"retina_detect\": true\r\n                    }} />\r\n                    <div className=\"container\">\r\n                        <div className=\"row  text-center\">\r\n                            <div className=\"col\">\r\n                                <h1>Sign In\r\n</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <div className=\"page-content\">\r\n                    <section>\r\n                        <div className=\"container\">\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col-lg-7 col-12\">\r\n                                    <img className=\"img-fluid\" src=\"/assets/images/login.png\" alt=\"\" />\r\n                                </div>\r\n                                <div className=\"col-lg-5 col-12 mt-5 mt-lg-0\">\r\n                                    <div>\r\n                                        <h2 className=\"mb-3\">Sign In</h2>\r\n                                        {this.props.login_error && <Alert color=\"danger\" isOpen={this.props.login_error ? true : false}>\r\n                                            <div>Invalid Username/Password</div>\r\n                                        </Alert>}\r\n                                        <AvForm onValidSubmit={this.submitHandler}>\r\n                                            <div className=\"messages\"></div>\r\n                                            <div className=\"form-group\">\r\n                                                <AvInput type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Email/Mobile\" value={this.state.username} required />\r\n                                                <div className=\"help-block with-errors\"></div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <AvInput type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} required />\r\n                                                <div className=\"help-block with-errors\"></div>\r\n                                            </div>\r\n                                            <div className=\"form-group mt-4 mb-5\">\r\n                                                <div className=\"remember-checkbox d-flex align-items-center justify-content-between\">\r\n                                                    <div className=\"form-check mb-0\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\r\n                                                        <label className=\"form-check-label mb-0\" htmlFor=\"flexCheckDefault\">\r\n                                                            Remember Me\r\n  </label>\r\n                                                    </div>\r\n                                                    <NavLink to=\"/reset-password\" >\r\n                                                        <b>Forgot Password?</b> </NavLink>\r\n                                                </div>\r\n                                            </div>\r\n                                            <input type=\"submit\" value=\"Login Now\" className=\"btn btn-primary btn-block\" />\r\n                                        </AvForm>\r\n                                        <div className=\"d-flex align-items-center text-center justify-content-center mt-4\">\r\n                                            <span className=\"text-muted me-1\">Don't have an account?</span>\r\n\r\n                                            <NavLink to=\"/signup\" >\r\n                                                <b>Sign Up</b> </NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    const { user, loading, login_error } = state.Auth;\r\n    return { user, loading, login_error };\r\n};\r\nexport default connect(mapStateToProps, { loginUser })(Login);"],"sourceRoot":""}